// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VacationHireInc.Data;

#nullable disable

namespace VacationHireInc.Data.Migrations
{
    [DbContext(typeof(VacationHireIncContext))]
    [Migration("20220520093726_Init")]
    partial class Init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("VacationHireInc.Data.Models.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Customer", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "United States, Street 1",
                            Name = "Elon Musk",
                            PhoneNumber = "1234567890"
                        },
                        new
                        {
                            Id = 2,
                            Address = "United States, Street 2",
                            Name = "Jeff Bezos",
                            PhoneNumber = "2234567890"
                        },
                        new
                        {
                            Id = 3,
                            Address = "France, Street 3",
                            Name = "Bernard Arnault",
                            PhoneNumber = "3234567890"
                        },
                        new
                        {
                            Id = 4,
                            Address = "United States, Street 4",
                            Name = "Bill Gates",
                            PhoneNumber = "4234567890"
                        },
                        new
                        {
                            Id = 5,
                            Address = "United States, Street 5",
                            Name = "Warren Buffett",
                            PhoneNumber = "5234567890"
                        });
                });

            modelBuilder.Entity("VacationHireInc.Data.Models.LookupType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("LookupType", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Truck"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Minivan"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Sedan"
                        });
                });

            modelBuilder.Entity("VacationHireInc.Data.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<string>("DamageDetails")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("DamagePresented")
                        .HasColumnType("bit");

                    b.Property<string>("PriceCurrency")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("PriceUnit")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("RentEndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("RentStartDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("RentablePropertyId")
                        .HasColumnType("int");

                    b.Property<bool>("TankFilledUp")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("RentablePropertyId");

                    b.ToTable("Order", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CustomerId = 1,
                            DamagePresented = false,
                            PriceCurrency = "USD",
                            PriceUnit = 210m,
                            RentEndDate = new DateTime(2022, 1, 22, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            RentStartDate = new DateTime(2022, 1, 15, 11, 30, 0, 0, DateTimeKind.Unspecified),
                            RentablePropertyId = 11,
                            TankFilledUp = true
                        },
                        new
                        {
                            Id = 2,
                            CustomerId = 4,
                            DamagePresented = false,
                            PriceCurrency = "USD",
                            PriceUnit = 900m,
                            RentEndDate = new DateTime(2022, 5, 1, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            RentStartDate = new DateTime(2022, 4, 11, 11, 30, 0, 0, DateTimeKind.Unspecified),
                            RentablePropertyId = 4,
                            TankFilledUp = false
                        },
                        new
                        {
                            Id = 3,
                            CustomerId = 5,
                            DamagePresented = false,
                            PriceCurrency = "USD",
                            PriceUnit = 420m,
                            RentEndDate = new DateTime(2022, 5, 5, 10, 40, 0, 0, DateTimeKind.Unspecified),
                            RentStartDate = new DateTime(2022, 5, 1, 11, 30, 0, 0, DateTimeKind.Unspecified),
                            RentablePropertyId = 9,
                            TankFilledUp = true
                        });
                });

            modelBuilder.Entity("VacationHireInc.Data.Models.RentableProperty", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TypeId");

                    b.ToTable("RentableProperty", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Iveco Daily",
                            TypeId = 1
                        },
                        new
                        {
                            Id = 2,
                            Name = "Ford Transit",
                            TypeId = 1
                        },
                        new
                        {
                            Id = 3,
                            Name = "Isuzu",
                            TypeId = 1
                        },
                        new
                        {
                            Id = 4,
                            Name = "Mercedes Vito",
                            TypeId = 2
                        },
                        new
                        {
                            Id = 5,
                            Name = "Ford S-Max",
                            TypeId = 2
                        },
                        new
                        {
                            Id = 6,
                            Name = "Fiat Doblo",
                            TypeId = 2
                        },
                        new
                        {
                            Id = 7,
                            Name = "Toyota Corolla",
                            TypeId = 3
                        },
                        new
                        {
                            Id = 8,
                            Name = "Mazda 3",
                            TypeId = 3
                        },
                        new
                        {
                            Id = 9,
                            Name = "Volkswagen Passat",
                            TypeId = 3
                        },
                        new
                        {
                            Id = 10,
                            Name = "Renault Megane",
                            TypeId = 3
                        },
                        new
                        {
                            Id = 11,
                            Name = "Audi A3",
                            TypeId = 3
                        });
                });

            modelBuilder.Entity("VacationHireInc.Data.Models.Order", b =>
                {
                    b.HasOne("VacationHireInc.Data.Models.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VacationHireInc.Data.Models.RentableProperty", "RentableProperty")
                        .WithMany()
                        .HasForeignKey("RentablePropertyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("RentableProperty");
                });

            modelBuilder.Entity("VacationHireInc.Data.Models.RentableProperty", b =>
                {
                    b.HasOne("VacationHireInc.Data.Models.LookupType", "Type")
                        .WithMany()
                        .HasForeignKey("TypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Type");
                });
#pragma warning restore 612, 618
        }
    }
}
